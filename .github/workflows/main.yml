name: ci server

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          for i in {1..10}; do
            nc -z localhost 5432 && echo "Postgres is up!" && break
            echo "Waiting..."
            sleep 5
          done

      - name: Set environment variables for Spring Boot
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/testdb" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=testuser" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=testpassword" >> $GITHUB_ENV
          echo "SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop" >> $GITHUB_ENV
          echo "SPRING_PROFILES_ACTIVE=test" >> $GITHUB_ENV

      - name: Build and test with Maven
        run: mvn -B clean verify
        
  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}/metrics-server:latest
          password: ${{ secrets.DOCKERHUB_TOKEN }}/metrics-server:latest

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}
